@model LoginViewModel

@{ ViewData["Title"] = "Sign in"; }

<div class="form-centered">
    <h2>@ViewData["Title"]</h2>
    <br />

    @await Component.InvokeAsync("ExternalLogin", ViewData["Title"])

    <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="Email" class="control-label"></label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Password" class="control-label"></label>
            <input asp-for="Password" class="form-control" />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-block btn-default">@ViewData["Title"]</button>
        </div>
        <div class="form-group">
            <span class="pull-left">
                <a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">Register as a new user?</a>
            </span>
            <span class="pull-right">
                <a asp-action="ForgotPassword">Forgot your password?</a>
            </span>
        </div>
    </form>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
